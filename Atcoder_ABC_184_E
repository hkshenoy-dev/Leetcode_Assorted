#include<bits/stdc++.h>
#include <iterator>
#include <iostream>
#include <numeric>
#include <math.h>
#define ll int
#define ull long
#define mpa make_pair
#define pb push_back
#define ff first
#define pii pair<ll,ll>
#define dd double
#define trace(x) cerr << #x << " : " << x << endl
#define ss second
#define boost ios_base::sync_with_stdio(0)
#define forp(i,a,b) for(ll i=a;i<=b;i++)
#define rep(i,n)    for(ll i=0;i<n;++i)
#define ren(i,n)    for(ll i=n-1;i>=0;i--)
#define forn(i,a,b) for(ll i=a;i>=b;i--)
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end();
#define sc(x) scanf("%lld",&x)
#define clr(x,val) memset(x,val,sizeof(x))
#define pr(x) printf("%lld\n",x) 
#define gc getchar
#define pdd pair<dd,dd>
#define read_arr(a,n) for(ll i=1;i<=n;i++)cin>>a[i];
#define init_arr(a,n) for(ll i=1;i<=n;i++)a[i]=n-i+1;
#define prec(x) cout<<fixed<<setprecision(x)
#define fre freopen("input.txt","r",stdin),freopen("output.txt","w",stdout)
#define arr array 
using namespace std;
ll dx[]={-1,1,0,0};
ll dy[]={0,0,-1,1};
ll n,m;
char a[2005][2005];
ll dis[2005][2005];
vector<pii> adj[26];
ll chk(ll x,ll y,ll n,ll m){
	if(x>=1 and x<=n && y>=1 && y<=m && a[x][y]!='#')return 1;
	return 0;
}

int main(){
	boost;
	cin>>n>>m;
	ll x=-1;
	ll y=-1;
	ll enx=-1;
	ll eny=-1;
	for(ll i=1;i<=n;i++){
		for(ll j=1;j<=m;j++){
			cin>>a[i][j];
			dis[i][j]=1e9;
			if(a[i][j]=='S')dis[i][j]=0,x=i,y=j;
			if(a[i][j]=='G')enx=i,eny=j;
			if(a[i][j]>='a' and a[i][j]<='z')adj[a[i][j]-'a'].pb({i,j});
		}
	}
	
	queue<pii> q;
	q.push({x,y});
	
	while(q.size()){
		ll cx=q.front().ff;
		ll cy=q.front().ss;
		q.pop();
		
		for(ll i=0;i<4;i++){
			ll nx=cx+dx[i];
			ll ny=cy+dy[i];
			ll new_dis=dis[cx][cy]+1;
			if(chk(nx,ny,n,m)){
				
				if(dis[nx][ny]>new_dis){
					ll p_d=dis[nx][ny];
					dis[nx][ny]=new_dis;
					q.push({nx,ny});
					
					if(a[nx][ny]>='a' and a[nx][ny]<='z'){
						ll ch=a[nx][ny]-'a';
						if(p_d<1e9)continue;
						for(ll j=0;j<adj[ch].size();j++){
							ll nd=new_dis+1;
							ll cd=dis[adj[ch][j].ff][adj[ch][j].ss];
							if(cd>nd){
							   q.push({adj[ch][j].ff,adj[ch][j].ss});
							   dis[adj[ch][j].ff][adj[ch][j].ss]=nd;
						    }
						}
						
					}
					else{
						q.push({nx,ny});

					}
				}
			}
			
		}
	}

	
	if(dis[enx][eny]>=1e9)cout<<-1;
	else cout<<dis[enx][eny];
		
	
}
	


	
