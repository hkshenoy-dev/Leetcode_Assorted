/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    map<pair<TreeNode *,int> ,int> vis,sol;
    
    int solve(TreeNode *root,int tk){
        if(root==NULL)return 0;
        if(vis[{root,tk}]==1)return sol[{root,tk}];
        
        vis[{root,tk}]=1;
        int ans=0;
        if(tk==0) ans+=root->val;
        
        if(tk==0) return sol[{root,tk}]=ans+solve(root->right,1)+solve(root->left,1);
        else {
            return sol[{root,tk}]=ans+max(solve(root->right,1),solve(root->right,0))+
                max(solve(root->left,1),solve(root->left,0));
        }
        
    }
    int rob(TreeNode* root) {
      return max(solve(root,1),solve(root,0));  
    }
};
