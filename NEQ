#include<bits/stdc++.h>
#include <iterator>
#include <iostream>
#include <numeric>
#include <math.h>
#define ll long long
#define ull long
#define mpa make_pair
#define pb push_back
#define ff first
#define pii pair<ll,ll>
#define dd double
#define trace(x) cerr << #x << " : " << x << endl
#define ss second
#define boost ios_base::sync_with_stdio(0)
#define forp(i,a,b) for(ll i=a;i<=b;i++)
#define rep(i,n)    for(ll i=0;i<n;++i)
#define ren(i,n)    for(ll i=n-1;i>=0;i--)
#define forn(i,a,b) for(ll i=a;i>=b;i--)
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end();
#define sc(x) scanf("%lld",&x)
#define clr(x,val) memset(x,val,sizeof(x))
#define pr(x) printf("%lld\n",x) 
#define gc getchar
#define pdd pair<dd,dd>
#define read_arr(a,n) for(ll i=1;i<=n;i++)cin>>a[i];
#define init_arr(a,n) for(ll i=1;i<=n;i++)a[i]=n-i+1;
#define prec(x) cout<<fixed<<setprecision(x)
#define fre freopen("input.txt","r",stdin),freopen("output.txt","w",stdout)
#define arr array 
using namespace std;
ll fact[1000005];
ll invfact[1000005];
ll mod=1e9+7;
ll modpow(ll a,ll n){
	ll res=1;
	while(n){
		if(n%2)res=(res*a)%mod;
		n/=2;
		a=(a*a)%mod;
	}
	return res;
}

void precompute(ll n){
	fact[0]=1;
	invfact[0]=1;
	for(ll i=1;i<=n;i++){
		fact[i]=(fact[i-1]*i)%mod;
		invfact[i]=modpow(fact[i],mod-2);
	}
}
ll comb(ll n,ll r){
	if(r>n)return 0;
	ll ans=fact[n];
	ans=(ans*invfact[r])%mod;
	ans=(ans*invfact[n-r])%mod;
	return ans;
}
int main(){
	
	
	ll n,m;
	cin>>n>>m;
	precompute(n+m);
	
	ll perm_a=comb(m,n)*fact[n];
	perm_a%=mod;
	
	ll ans=0;
	
	for(ll i=0;i<=n;i++){
		ll perm_b=comb(n,i);
		perm_b=(perm_b*comb(m-i,n-i))%mod;
		perm_b=(perm_b*fact[n-i])%mod;
		if(i%2)ans=(ans-perm_b+mod)%mod;
		else ans=(ans+perm_b)%mod;
	}
	
	
	
	
	
	ans=(ans*perm_a)%mod;
	
	cout<<ans;
	
	
	
 
 
	
}
	


	
